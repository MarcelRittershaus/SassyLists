// Cast a `$list` into a map, using indexes as keys (starting with `$start`).
// Useful for iterating through a list with an index variable.
// e.g. `@each $i, $value in to-map($list)`
//
// @author Andrey "Lolmaus" Mikhaylov
// 
// @ignore Documentation: http://sassylists.com/documentation/#to-map
// 
// @param {List}   $list      - list to turn into map
// @param {Number} $start (1) - index to start with
// 
// @throws List cannot be empty for `to-map`.
// @throws $start is not a number for `to-map`.
// 
// @return {Map | Null}

@function to-map($list, $start: 1) {
  @if length($list) == 0 {
    @warn "List cannot be empty for `to-map`.";
    @return null;
  }

  @if type-of($start) != "number" {
    @warn "$start provided to `to-map` was #{type-of($start)}, but it should be a number.";
    @return null;
  }

  $map: ();

  @for $index from 1 through length($list) {
    $key: $index + $start - 1;
    $value: nth($list, $index);
    $map: map-merge($map, ($key: $value));
  }

  @return $map;
}

// @requires to-map
// @alias to-map

@function enumerate($list, $start: 1) {
    @return to-map($list, $start);
}

// @requires to-map
// @alias to-map

@function mapify($list, $start: 1) {
    @return to-map($list, $start);
}