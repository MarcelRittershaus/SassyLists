/**
 * Remove value from $list at index $index
 * -------------------------------------------------------------------------------
 * @example remove-nth( (a, b, c),   2 ) => a, c
 * @example remove-nth( (a, b, c),   0 ) => error
 * @example remove-nth( (a, b, c),  -1 ) => a, b
 * @example remove-nth( (a, b, c),  10 ) => error
 * @example remove-nth( (a, b, c), -10 ) => error
 * -------------------------------------------------------------------------------
 * @param $list [List] : list
 * @param $index [Number] : index to remove
 * -------------------------------------------------------------------------------
 * @raise [Error] if $index isn't an integer
 * @raise [Error] if $index is 0
 * @raise [Error] if abs value of $index is strictly greater then length of $list
 * -------------------------------------------------------------------------------
 * @return [List] | false
 */
@function remove-nth($list, $index) {
  $result: false;
        
  @if type-of($index) != number {
    @warn "$index: #{quote($index)} is not a number for `remove-nth`.";
    @return $result;
  }

  @else if $index == 0 {
    @warn "List index 0 must be a non-zero integer for `remove-nth`.";
    @return $result;
  }

  @else if abs($index) > length($list) {
    @warn "List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.";
    @return $result;
  }

  @else {
    $result: ();
    $index: if($index < 0, length($list) + $index + 1, $index);  

    @for $i from 1 through length($list) {
      @if $i != $index {
        $result: append($result, nth($list, $i));
      }
    }
  }
        
  @return $result;
}