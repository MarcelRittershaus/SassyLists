@include describe("The sl-replace function") {
  @include it("should replace a value in a list") {
    @include should(expect( sl-replace( 1 2 3 4, 2 , 3 ) ), to(equal( 1 3 3 4 ) ));
    @include should(expect( sl-replace( "bar" "foo" "bar" "baz", "bar", "tah" ) ), to(equal( "tah" "foo" "tah" "baz" ) ));
  }

  @include it("should remove a value from a list if no new value is provided") {
    @include should(expect( sl-replace( 1 2 3 4, 2, null ) ), to(equal( 1 3 4 ) ));
    @include should(expect( sl-replace( "bar" "foo" "bar" "baz", "bar", null ) ), to(equal( "foo" "baz" ) ));
  }

  @include it("should not replace items recursively") {
    @include should(expect( sl-replace( 1 2 3 (1 2 3), 2 , 3 ) ), to(equal( 1 3 3 (1 2 3) ) ));
    @include should(expect( sl-replace( "bar" "foo" ("bar" "baz")  , "bar" , "tah" ) ), to(equal( "tah" "foo" ("bar" "baz") ) ));
  }

  @include it("should not remove items recursively") {
    @include should(expect( sl-replace( 1 2 3 (1 2 3), 2, null ) ), to(equal( 1 3 (1 2 3) ) ));
    @include should(expect( sl-replace( "bar" "foo" ("bar" "baz"), "bar", null ) ), to(equal( "foo" ("bar" "baz") ) ));
  }
}